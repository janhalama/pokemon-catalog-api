version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
      - API_BASE_URL=http://localhost:3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=pokemon_catalog
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SSL=false
      - LOG_LEVEL=info
      - CORS_ORIGIN=http://localhost:3000
      - RATE_LIMIT_MAX=100
      - RATE_LIMIT_WINDOW=1 minute
      - JWT_SECRET=CUFxpe9vjm83DTIUz0vCIy3JtPlYVbvu
    volumes:
      - ./src:/app/src
      - ./tsconfig.json:/app/tsconfig.json
      - ./nodemon.json:/app/nodemon.json
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
    depends_on:
      - postgres
    command: dev
    networks:
      - pokemon-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=pokemon_catalog
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pokemon-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  pokemon-network:
    driver: bridge 